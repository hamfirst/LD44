<?xml version="1.0" encoding="UTF-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|Win32">
      <Configuration>MinSizeRel</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|Win32">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGUID>{8E113A07-CA7D-3128-80AC-EA8C90B0F4D6}</ProjectGUID>
    <WindowsTargetPlatformVersion>10.0.10586.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>Win32</Platform>
    <ProjectName>ClangDiagnosticDriver</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v140</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
    <PropertyGroup>
      <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include;C:\Dev\StormNet\StormRefl\llvm\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include;C:\Dev\StormNet\StormRefl\llvm\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include;C:\Dev\StormNet\StormRefl\llvm\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include;C:\Dev\StormNet\StormRefl\llvm\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building Custom Rule C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -HC:/Dev/StormNet/StormRefl/llvm -BC:/Dev/StormNet/StormRefl/llvm --check-stamp-file C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic/CMakeLists.txt;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CMakeLists.txt;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building Custom Rule C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -HC:/Dev/StormNet/StormRefl/llvm -BC:/Dev/StormNet/StormRefl/llvm --check-stamp-file C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic/CMakeLists.txt;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CMakeLists.txt;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building Custom Rule C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -HC:/Dev/StormNet/StormRefl/llvm -BC:/Dev/StormNet/StormRefl/llvm --check-stamp-file C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic/CMakeLists.txt;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CMakeLists.txt;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building Custom Rule C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -HC:/Dev/StormNet/StormRefl/llvm -BC:/Dev/StormNet/StormRefl/llvm --check-stamp-file C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic/CMakeLists.txt;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CMakeLists.txt;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Dev\StormNet\StormRefl\llvm\CMakeFiles\02c570a106ae352b7c6757635e90813e\DiagnosticDriverKinds.inc.tmp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building DiagnosticDriverKinds.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
..\..\..\..\..\Debug\bin\clang-tblgen.exe -gen-clang-diags-defs -clang-component=Driver -I C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic -I C:/Dev/StormNet/StormRefl/llvm/lib/Target -I C:/Dev/StormNet/StormRefl/llvm/include C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic/Diagnostic.td -o C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic/DiagnosticDriverKinds.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Dev/StormNet/StormRefl/llvm/CMakeFiles/02c570a106ae352b7c6757635e90813e/DiagnosticDriverKinds.inc.tmp.rule;C:\Dev\StormNet\StormRefl\llvm\Debug\bin\clang-tblgen.exe;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\arm_neon.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\Attr.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\AttrDocs.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CommentNodes.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DeclNodes.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\Diagnostic.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticAnalysisKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticASTKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticCategories.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticCommentKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticCommonKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticDriverKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticFrontendKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticGroups.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticLexKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticParseKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticSemaKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticSerializationKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\StmtNodes.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\CodeGen\ValueTypes.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\Attributes.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\Intrinsics.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsAArch64.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsAMDGPU.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsARM.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsBPF.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsHexagon.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsMips.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsNVVM.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsPowerPC.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsSystemZ.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsWebAssembly.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsX86.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsXCore.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Option\OptParser.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\TableGen\SearchableTable.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Target\GenericOpcodes.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Target\Target.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Target\TargetCallingConv.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Target\TargetItinerary.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Target\TargetSchedule.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Target\TargetSelectionDAG.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\Diagnostic.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticDriverKinds.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building DiagnosticDriverKinds.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
..\..\..\..\..\Release\bin\clang-tblgen.exe -gen-clang-diags-defs -clang-component=Driver -I C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic -I C:/Dev/StormNet/StormRefl/llvm/lib/Target -I C:/Dev/StormNet/StormRefl/llvm/include C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic/Diagnostic.td -o C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic/DiagnosticDriverKinds.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Dev/StormNet/StormRefl/llvm/CMakeFiles/02c570a106ae352b7c6757635e90813e/DiagnosticDriverKinds.inc.tmp.rule;C:\Dev\StormNet\StormRefl\llvm\Release\bin\clang-tblgen.exe;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\arm_neon.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\Attr.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\AttrDocs.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CommentNodes.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DeclNodes.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\Diagnostic.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticAnalysisKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticASTKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticCategories.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticCommentKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticCommonKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticDriverKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticFrontendKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticGroups.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticLexKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticParseKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticSemaKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticSerializationKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\StmtNodes.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\CodeGen\ValueTypes.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\Attributes.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\Intrinsics.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsAArch64.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsAMDGPU.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsARM.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsBPF.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsHexagon.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsMips.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsNVVM.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsPowerPC.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsSystemZ.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsWebAssembly.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsX86.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsXCore.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Option\OptParser.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\TableGen\SearchableTable.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Target\GenericOpcodes.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Target\Target.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Target\TargetCallingConv.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Target\TargetItinerary.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Target\TargetSchedule.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Target\TargetSelectionDAG.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\Diagnostic.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticDriverKinds.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building DiagnosticDriverKinds.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
..\..\..\..\..\MinSizeRel\bin\clang-tblgen.exe -gen-clang-diags-defs -clang-component=Driver -I C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic -I C:/Dev/StormNet/StormRefl/llvm/lib/Target -I C:/Dev/StormNet/StormRefl/llvm/include C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic/Diagnostic.td -o C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic/DiagnosticDriverKinds.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Dev/StormNet/StormRefl/llvm/CMakeFiles/02c570a106ae352b7c6757635e90813e/DiagnosticDriverKinds.inc.tmp.rule;C:\Dev\StormNet\StormRefl\llvm\MinSizeRel\bin\clang-tblgen.exe;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\arm_neon.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\Attr.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\AttrDocs.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CommentNodes.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DeclNodes.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\Diagnostic.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticAnalysisKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticASTKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticCategories.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticCommentKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticCommonKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticDriverKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticFrontendKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticGroups.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticLexKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticParseKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticSemaKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticSerializationKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\StmtNodes.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\CodeGen\ValueTypes.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\Attributes.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\Intrinsics.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsAArch64.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsAMDGPU.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsARM.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsBPF.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsHexagon.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsMips.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsNVVM.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsPowerPC.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsSystemZ.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsWebAssembly.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsX86.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsXCore.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Option\OptParser.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\TableGen\SearchableTable.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Target\GenericOpcodes.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Target\Target.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Target\TargetCallingConv.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Target\TargetItinerary.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Target\TargetSchedule.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Target\TargetSelectionDAG.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\Diagnostic.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticDriverKinds.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building DiagnosticDriverKinds.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
..\..\..\..\..\RelWithDebInfo\bin\clang-tblgen.exe -gen-clang-diags-defs -clang-component=Driver -I C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic -I C:/Dev/StormNet/StormRefl/llvm/lib/Target -I C:/Dev/StormNet/StormRefl/llvm/include C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic/Diagnostic.td -o C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic/DiagnosticDriverKinds.inc.tmp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Dev/StormNet/StormRefl/llvm/CMakeFiles/02c570a106ae352b7c6757635e90813e/DiagnosticDriverKinds.inc.tmp.rule;C:\Dev\StormNet\StormRefl\llvm\RelWithDebInfo\bin\clang-tblgen.exe;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\arm_neon.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\Attr.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\AttrDocs.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CommentNodes.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DeclNodes.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\Diagnostic.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticAnalysisKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticASTKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticCategories.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticCommentKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticCommonKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticDriverKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticFrontendKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticGroups.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticLexKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticParseKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticSemaKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticSerializationKinds.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\StmtNodes.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\CodeGen\ValueTypes.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\Attributes.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\Intrinsics.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsAArch64.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsAMDGPU.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsARM.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsBPF.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsHexagon.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsMips.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsNVVM.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsPowerPC.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsSystemZ.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsWebAssembly.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsX86.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\IR\IntrinsicsXCore.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Option\OptParser.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\TableGen\SearchableTable.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Target\GenericOpcodes.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Target\Target.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Target\TargetCallingConv.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Target\TargetItinerary.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Target\TargetSchedule.td;C:\Dev\StormNet\StormRefl\llvm\include\llvm\Target\TargetSelectionDAG.td;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\Diagnostic.td;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticDriverKinds.inc.tmp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Dev\StormNet\StormRefl\llvm\CMakeFiles\02c570a106ae352b7c6757635e90813e\DiagnosticDriverKinds.inc.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Updating DiagnosticDriverKinds.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic/DiagnosticDriverKinds.inc.tmp C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic/DiagnosticDriverKinds.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Dev/StormNet/StormRefl/llvm/CMakeFiles/02c570a106ae352b7c6757635e90813e/DiagnosticDriverKinds.inc.rule;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticDriverKinds.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticDriverKinds.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Updating DiagnosticDriverKinds.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic/DiagnosticDriverKinds.inc.tmp C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic/DiagnosticDriverKinds.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Dev/StormNet/StormRefl/llvm/CMakeFiles/02c570a106ae352b7c6757635e90813e/DiagnosticDriverKinds.inc.rule;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticDriverKinds.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticDriverKinds.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Updating DiagnosticDriverKinds.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic/DiagnosticDriverKinds.inc.tmp C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic/DiagnosticDriverKinds.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Dev/StormNet/StormRefl/llvm/CMakeFiles/02c570a106ae352b7c6757635e90813e/DiagnosticDriverKinds.inc.rule;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticDriverKinds.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticDriverKinds.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Updating DiagnosticDriverKinds.inc...</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_if_different C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic/DiagnosticDriverKinds.inc.tmp C:/Dev/StormNet/StormRefl/llvm/tools/clang/include/clang/Basic/DiagnosticDriverKinds.inc
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Dev/StormNet/StormRefl/llvm/CMakeFiles/02c570a106ae352b7c6757635e90813e/DiagnosticDriverKinds.inc.rule;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticDriverKinds.inc.tmp;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticDriverKinds.inc</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Dev\StormNet\StormRefl\llvm\CMakeFiles\5e29fdef6dc229cfb2538dbc4113594b\ClangDiagnosticDriver.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:/Dev/StormNet/StormRefl/llvm/CMakeFiles/5e29fdef6dc229cfb2538dbc4113594b/ClangDiagnosticDriver.rule;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticDriverKinds.inc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CMakeFiles\ClangDiagnosticDriver</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:/Dev/StormNet/StormRefl/llvm/CMakeFiles/5e29fdef6dc229cfb2538dbc4113594b/ClangDiagnosticDriver.rule;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticDriverKinds.inc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CMakeFiles\ClangDiagnosticDriver</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:/Dev/StormNet/StormRefl/llvm/CMakeFiles/5e29fdef6dc229cfb2538dbc4113594b/ClangDiagnosticDriver.rule;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticDriverKinds.inc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CMakeFiles\ClangDiagnosticDriver</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:/Dev/StormNet/StormRefl/llvm/CMakeFiles/5e29fdef6dc229cfb2538dbc4113594b/ClangDiagnosticDriver.rule;C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\DiagnosticDriverKinds.inc;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CMakeFiles\ClangDiagnosticDriver</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <None Include="C:\Dev\StormNet\StormRefl\llvm\tools\clang\include\clang\Basic\CMakeFiles\ClangDiagnosticDriver" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:/Dev/StormNet/StormRefl/llvm/ZERO_CHECK.vcxproj">
      <Project>6AB7E516-AE7A-348F-A689-DE9ED87840D0</Project>
    </ProjectReference>
    <ProjectReference Include="C:/Dev/StormNet/StormRefl/llvm/tools/clang/utils/TableGen/clang-tblgen.vcxproj">
      <Project>BDCC855B-2AE9-3C33-B3FD-08E8EF7CF4D9</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>