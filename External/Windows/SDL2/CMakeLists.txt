cmake_minimum_required(VERSION 3.0)

include_directories(. ../../../. ../../.././External)
set(CMAKE_CXX_STANDARD 14)

if (WEB)
  add_definitions(-D_WEB)
  set(PLATFORM_SRC_SDL 
            )
elseif (MSVC)
  add_definitions(-D_WINDOWS)
  include_directories(../../.././External/Windows)
  set(PLATFORM_SRC_SDL 
            ./audio/directsound/SDL_directsound.c
            ./audio/disk/SDL_diskaudio.c
            ./audio/dummy/SDL_dummyaudio.c
            ./audio/winmm/SDL_winmm.c
            ./audio/xaudio2/SDL_xaudio2.c
            ./core/windows/SDL_windows.c
            ./core/windows/SDL_xinput.c
            ./filesystem/windows/SDL_sysfilesystem.c
            ./haptic/windows/SDL_dinputhaptic.c
            ./haptic/windows/SDL_windowshaptic.c
            ./haptic/windows/SDL_xinputhaptic.c
            ./joystick/windows/SDL_dinputjoystick.c
            ./joystick/windows/SDL_mmjoystick.c
            ./joystick/windows/SDL_windowsjoystick.c
            ./joystick/windows/SDL_xinputjoystick.c
            ./loadso/windows/SDL_sysloadso.c
            ./main/windows/SDL_windows_main.c
            ./power/windows/SDL_syspower.c
            ./thread/windows/SDL_sysmutex.c
            ./thread/windows/SDL_syssem.c
            ./thread/windows/SDL_systhread.c
            ./thread/windows/SDL_systls.c
            ./timer/windows/SDL_systimer.c
            ./video/windows/SDL_windowsclipboard.c
            ./video/windows/SDL_windowsevents.c
            ./video/windows/SDL_windowsframebuffer.c
            ./video/windows/SDL_windowskeyboard.c
            ./video/windows/SDL_windowsmessagebox.c
            ./video/windows/SDL_windowsmodes.c
            ./video/windows/SDL_windowsmouse.c
            ./video/windows/SDL_windowsopengl.c
            ./video/windows/SDL_windowsopengles.c
            ./video/windows/SDL_windowsshape.c
            ./video/windows/SDL_windowsvideo.c
            ./video/windows/SDL_windowswindow.c
            )
elseif (APPLE)
  add_definitions(-D_MACOS)
  include_directories(/usr/include/freetype2)
  set(PLATFORM_SRC_SDL 
            ./power/macosx/SDL_syspower.c
            )
elseif (UNIX)
  add_definitions(-D_LINUX)
  include_directories(/usr/include/freetype2)
  set(PLATFORM_SRC_SDL 
            ./core/linux/SDL_dbus.c
            ./core/linux/SDL_evdev.c
            ./core/linux/SDL_evdev_kbd.c
            ./core/linux/SDL_fcitx.c
            ./core/linux/SDL_ibus.c
            ./core/linux/SDL_ime.c
            ./core/linux/SDL_udev.c
            ./haptic/linux/SDL_syshaptic.c
            ./joystick/linux/SDL_sysjoystick.c
            ./power/linux/SDL_syspower.c
            )
endif()

set(GENERIC_SRC_SDL 
            ./SDL.c
            ./SDL_assert.c
            ./SDL_dataqueue.c
            ./SDL_error.c
            ./SDL_hints.c
            ./SDL_log.c
            ./atomic/SDL_atomic.c
            ./atomic/SDL_spinlock.c
            ./audio/SDL_audio.c
            ./audio/SDL_audiocvt.c
            ./audio/SDL_audiodev.c
            ./audio/SDL_audiotypecvt.c
            ./audio/SDL_mixer.c
            ./audio/SDL_wave.c
            ./cpuinfo/SDL_cpuinfo.c
            ./dynapi/SDL_dynapi.c
            ./events/SDL_clipboardevents.c
            ./events/SDL_dropevents.c
            ./events/SDL_events.c
            ./events/SDL_gesture.c
            ./events/SDL_keyboard.c
            ./events/SDL_mouse.c
            ./events/SDL_quit.c
            ./events/SDL_touch.c
            ./events/SDL_windowevents.c
            ./file/SDL_rwops.c
            ./haptic/SDL_haptic.c
            ./haptic/dummy/SDL_syshaptic.c
            ./joystick/SDL_gamecontroller.c
            ./joystick/SDL_joystick.c
            ./libm/e_atan2.c
            ./libm/e_log.c
            ./libm/e_pow.c
            ./libm/e_rem_pio2.c
            ./libm/e_sqrt.c
            ./libm/k_cos.c
            ./libm/k_rem_pio2.c
            ./libm/k_sin.c
            ./libm/k_tan.c
            ./libm/s_atan.c
            ./libm/s_copysign.c
            ./libm/s_cos.c
            ./libm/s_fabs.c
            ./libm/s_floor.c
            ./libm/s_scalbn.c
            ./libm/s_sin.c
            ./libm/s_tan.c
            ./power/SDL_power.c
            ./render/SDL_d3dmath.c
            ./render/SDL_render.c
            ./render/SDL_yuv_mmx.c
            ./render/SDL_yuv_sw.c
            ./render/direct3d/SDL_render_d3d.c
            ./render/direct3d11/SDL_render_d3d11.c
            ./render/opengl/SDL_render_gl.c
            ./render/opengl/SDL_shaders_gl.c
            ./render/opengles/SDL_render_gles.c
            ./render/opengles2/SDL_render_gles2.c
            ./render/opengles2/SDL_shaders_gles2.c
            ./render/software/SDL_blendfillrect.c
            ./render/software/SDL_blendline.c
            ./render/software/SDL_blendpoint.c
            ./render/software/SDL_drawline.c
            ./render/software/SDL_drawpoint.c
            ./render/software/SDL_render_sw.c
            ./render/software/SDL_rotate.c
            ./stdlib/SDL_getenv.c
            ./stdlib/SDL_iconv.c
            ./stdlib/SDL_malloc.c
            ./stdlib/SDL_qsort.c
            ./stdlib/SDL_stdlib.c
            ./stdlib/SDL_string.c
            ./thread/SDL_thread.c
            ./thread/generic/SDL_syscond.c
            ./timer/SDL_timer.c
            ./video/SDL_blit.c
            ./video/SDL_blit_0.c
            ./video/SDL_blit_1.c
            ./video/SDL_blit_A.c
            ./video/SDL_blit_auto.c
            ./video/SDL_blit_copy.c
            ./video/SDL_blit_N.c
            ./video/SDL_blit_slow.c
            ./video/SDL_bmp.c
            ./video/SDL_clipboard.c
            ./video/SDL_egl.c
            ./video/SDL_fillrect.c
            ./video/SDL_pixels.c
            ./video/SDL_rect.c
            ./video/SDL_RLEaccel.c
            ./video/SDL_shape.c
            ./video/SDL_stretch.c
            ./video/SDL_surface.c
            ./video/SDL_video.c
            ./video/dummy/SDL_nullvideo.c
            ./video/dummy/SDL_nullevents.c
            ./video/dummy/SDL_nullframebuffer.c
            )
add_library(SDL ${GENERIC_SRC_SDL} ${PLATFORM_SRC_SDL} )